name: CI/CD Pipeline

on:
    push:
        branches: [main, dev]
    pull_request:
        branches: [main, dev]

jobs:
    test_and_build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # Required for Turborepo remote caching

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 8

            - name: Get pnpm store directory
              id: pnpm-cache
              run: |
                  echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

            - name: Setup pnpm cache
              uses: actions/cache@v4
              with:
                  path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Lint
              run: pnpm turbo run lint

            - name: Test
              run: pnpm turbo run test

            - name: Build
              run: pnpm turbo run build

    deploy_staging:
        needs: test_and_build
        if: github.ref == 'refs/heads/dev'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Deploy Web App to Vercel (Staging)
              uses: amondnet/vercel-action@v25
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
                  vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_WEB }}
                  working-directory: ./apps/web

            - name: Deploy API to Vercel (Staging)
              uses: amondnet/vercel-action@v25
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
                  vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_API }}
                  working-directory: ./apps/api

    deploy_production:
        needs: test_and_build
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Deploy Web App to Vercel (Production)
              uses: amondnet/vercel-action@v25
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
                  vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_WEB }}
                  working-directory: ./apps/web
                  vercel-args: "--prod"

            - name: Deploy API to Vercel (Production)
              uses: amondnet/vercel-action@v25
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
                  vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_API }}
                  working-directory: ./apps/api
                  vercel-args: "--prod"
